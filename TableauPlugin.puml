@startuml

MockDataset <|-- SchemaConversionDSSHyper

TableauHyperExporter <|-- SchemaConversionDSSHyper

class TableauHyperExporter {
    row_index
    data
    schema_converter
    ___
    open()
    open_to_file()
    write_row()
    close()
}

SchemaConversionDSSHyper <|-- TypeConversionDSSHyper

class SchemaConversionDSSHyper {
    type_converter
    dss_types_array
    table
    ___
    + is_geo()
    + dss_schema_geo_to_text()
    + convert_schema_dss_to_hyper()
    # enforce_hyper_type_on_row()
    ___
    + test_schema_conversion()
}

class TypeConversionDSSHyper {
    mapping_dss_to_hyper
    mapping_hyper_type_enforcement
     + translate()
    + set_type()
    + enforce_int()
    + enforce_double()
    + enforce_string()
    + enforce_date()
    + enforce_geopoint()
    + enforce_bool()
    ___
    + test_type_conversion()
}

class MockDataset{
    is_geo
    schema
    data
    + __main__
    + generate_schema()
    + generate_row()
    + generate_rows()
    + generate_string()
    + generate_float()
    + generate_int()
    + generate_date()
    + generate_geopoint()
    ___
    + test_mock_dss_generator()
}

class -HyperAPI-{
    expected format of the API is known
    ___
    + test_hyper_api()
}

TableauHyperExporter <|-- HyperConnectionWrapper

class HyperConnectionWrapper{
    Wrapper for the Hyper db file
    connection.Encapsulate the write
    and update of the table.
    ___
    # write_geo_table()
    # write_regular_table()
}


@enduml